# OpenTrader

https://github.com/OpenTrading/OpenTrader/

This project gives a command-line interpreter to communicate with
an OpenTrading Metatrader-Python bridge enabled MetaTrader
(https://github.com/OpenTrading/OTMql4AMQP/).
You can subscribe to tick, bar, and timer events,
query, open and close orders, and execute Metatrader code remotely.
If you have `pyrabbit` installed, you can query the AMQP server.


This ia a work in progress but it has quite a lot in there already:
* send most Mql4 commands and gets the return values as Python,
* receive bar, tick and timer notifications,
* send and query orders to Mt4, using a better MQL4 trading library,
* reads CSV and everything internally is pandas DataFrames,
* there's a backtester for trading recipes based on `pybacktest`,
  using pandas Series with numpy/ta-lib, so it's quite fast.
* there's simple plotting of the CSV files and results using `matplotlib`,
* you can save recipes and backtest results as HDF5, viewable by
* (there's an optimizer in there, but not yet wired up.)

Coming Real Soon Now(TM) is wiring up the backtester so that it should
soon support recipes for live-trading on Metatrader from recipes and chefs.

It builds on `OTMql4AMQP`, and requires that to be installed in your
Metatrader Python as a pre-requisite, if you want to do live trading.
In your Python, you also must have installed Pika:
https://pypi.python.org/pypi/pika/, which must be accessible to your
OTMql4Py (https://github.com/OpenTrading/OTMql4Py/).
You will have to call OTCmd2 with the `-P` option with the
path of your installed Metatrader (e.g. `c:\Program Files\Metatrader`),
or add your installed OTMql4Py Python directory to the `PYTHONPATH`
environment variable (e.g. `c:\Program Files\Metatrader\MQL4\Python`).

For backtesting, you need `pybacktest` installed
https://github.com/ematvey/pybacktest/

**This is a work in progress - a developers' pre-release version.**

The project wiki should be open for editing by anyone logged into GitHub:
**Please report any system it works or doesn't work on in the wiki:
include the Metatrader build number, the origin of the metatrader exe,
the Windows version, and the AMQP server version and version of the Pika.**
This code in known to run under Linux Wine (1.7.x), so this project
bridges Metatrader to RabbitMQ under Linux.

### Installation

You must have `cmd2` installed the Python that runs this script:
see https://bitbucket.org/catherinedevlin/cmd2

You must have `configobj` installed the Python that runs this script:
The up-to-date one is at https://github.com/DiffSK/configobj/

In your Metatrader Python, you also must have installed Pika:
https://pypi.python.org/pypi/pika/

Firstly, install the OTMql4AMQP, OTMql4Py and OTMql4Lib projects from
https://github.com/OpenTrading/ into the Python called by your Metatrader:
* OTMql4AMQP (https://github.com/OpenTrading/OTMql4AMQP/),
* OTMql4Py (https://github.com/OpenTrading/OTMql4Py/), and
* OTMql4Lib (https://github.com/OpenTrading/OTMql4Lib/)

Attach the OTPyTestPikaEA.mq4 to a chart and make sure it's working:
https://github.com/OpenTrading/OTMql4AMQP/MQL4/Experts/OTMql4/OTPyTestPikaEA.mq4

Then run 
```
python setup.py
```
to create the `OTCmd2` script. Run `OTCmd2 help` (see below).

### Project

Please file any bugs in the issue tracker:
https://github.com/OpenTrading/OpenTrader/issues

Use the Wiki to start topics for discussion:
https://github.com/OpenTrading/OpenTrader/wiki
It's better to use the wiki for knowledge capture, and then we can pull
the important pages back into the documentation in the share/doc directory.
You will need to be signed into github.com to see or edit in the wiki.


