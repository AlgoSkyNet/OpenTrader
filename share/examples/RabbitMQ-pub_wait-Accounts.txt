# See the description in tests/features/OTCmd2-pub_wait-Accounts.txt
# These tests will only work if you have an OTMql4AMQP enabled Metatrader running,
# the Experts/OTMql4/OTPyTestPikaEA.mq4 attached to a chart in it, and
# the RabbitMQ server configured and running.
# echo the commands from the script so that we can watch the progress
set echo True
# set the on-line target to be the default from OTCmd2.ini
sub get
# set the on-line target
sub set RabbitMQ
# give us a listener thread running, subscribed to retval.#
sub run retval.# timer.#
# load the python time module
py import time
# sleep for 15 seconds
py time.sleep(15)
# get the list of charts we have seen because of listening to the timer
chart list
py assert type(self._G) == list and len(self._G) > 0
# set the default chart to the first of list of charts we have seen
chart set
# check the default chart
chart get
py assert type(self._G) == str and len(self._G) > 0
# set the on-line speaker target
pub set RabbitMQ
# wait for the retval from Mt4
pub wait AccountBalance
py assert type(self._G) == float and type(self._G) > 0
# wait for the retval from Mt4
pub wait AccountCompany
# wait for the retval from Mt4
pub wait AccountCredit
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountCurrency
py assert type(self._G) == str and len(self._G) >= 3
# wait for the retval from Mt4
pub wait AccountEquity
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountFreeMargin
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountFreeMarginMode
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountLeverage
py assert type(self._G) == int and self._G > 0
# wait for the retval from Mt4
pub wait AccountMargin
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountName
py assert type(self._G) == str and len(self._G) > 3
# wait for the retval from Mt4
pub wait AccountNumber
py assert type(self._G) == int and self._G > 0
# wait for the retval from Mt4
pub wait AccountProfit
py assert type(self._G) == float
# wait for the retval from Mt4
pub wait AccountServer
py assert type(self._G) == str and len(self._G) > 3
# wait for the retval from Mt4
pub wait AccountStopoutLevel
# wait for the retval from Mt4
pub wait AccountStopoutMode
exit
