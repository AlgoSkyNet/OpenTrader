== Rabbit4Mt4

There's a problem with the current approach of using [[OTMql4AMQP]] which is
[[RoundTripping|https://github.com/OpenTrading/OTMql4AMQP/wiki/RoundTripping]]:
Mt4 can call Python in [[OTMql4AMQP]], but Python can't call Mt4.

This costs us up to 10 seconds per call to Mt4, unless we speed up the
timer events, which may add to the load on Mt4.

* first we need to measure the load on Mt4 for decreasing the timer period.

Another approach is to replace [[OTMql4AMQP]] in Mt4 with something like
https://github.com/femtotrader/rabbit4mt4/
Then OpenTrader would be speaking to Mt4 over RabbitMQ without the poll into Python.

It shouldn't be hard to wire up: {{{ePyPikaPopQueue}}} in {{{OnTimer}}}
pops the queue of things to do, which is just an Mt4 command as a string.
{{{
    uRetval = ePyPikaPopQueue(uCHART_ID);
}}}
It just pops the queue from Python can calls {{{uOTPyPikaProcessCmd}}},
which is a portable library command that should work in any Mt4.
{{{
uOutput = uOTPyPikaProcessCmd(uInput);
}}}
It then just takes the result of the evaluation and puts it back on AMQP to OpenTrader:
{{{
uInfo = zOTLibSimpleFormatRetval("retval", uCHART_ID, 0, "", uOutput);
eReturnOnSpeaker(uCHART_ID, "retval", uInfo, uInput);
}}}

Similarly, there's not much to sending OpenTrader timer, bar and tick events:
{{{
uMess  = zOTLibSimpleFormatTick(uType, uCHART_ID, 0, uTime, uInfo);
eSendOnSpeaker(uCHART_ID, uType, uMess);
}}}
